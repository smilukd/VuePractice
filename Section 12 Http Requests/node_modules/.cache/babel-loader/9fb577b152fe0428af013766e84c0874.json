{"remainingRequest":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/babel-loader/lib/index.js!/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/src/components/survey/UserExperiences.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/src/components/survey/UserExperiences.vue","mtime":1607543624827},{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/vue-loader-v16/dist/index.js","mtime":1607095271000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgU3VydmV5UmVzdWx0IGZyb20gJy4vU3VydmV5UmVzdWx0LnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBTdXJ2ZXlSZXN1bHQ6IFN1cnZleVJlc3VsdAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlc3VsdHM6IFtdLAogICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICBlcnJvcjogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGxvYWRFeHBlcmllbmNlczogZnVuY3Rpb24gbG9hZEV4cGVyaWVuY2VzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlOwogICAgICBmZXRjaCgnaHR0cHM6Ly92dWUtaHR0cC1kZW1vLWI3YjdkLWRlZmF1bHQtcnRkYi5maXJlYmFzZWlvLmNvbS9zdXJ2ZXlzLmpzb24nKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5vaykgewogICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBfdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgICB2YXIgcmVzdWx0cyA9IFtdOwoKICAgICAgICBmb3IgKHZhciBpZCBpbiBkYXRhKSB7CiAgICAgICAgICByZXN1bHRzLnB1c2goewogICAgICAgICAgICBpZDogaWQsCiAgICAgICAgICAgIG5hbWU6IGRhdGFbaWRdLm5hbWUsCiAgICAgICAgICAgIHJhdGluZzogZGF0YVtpZF0ucmF0aW5nCiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIF90aGlzLnJlc3VsdHMgPSByZXN1bHRzOwogICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgX3RoaXMuaXNMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgX3RoaXMuZXJyb3IgPSAiRmFpbGVkIHRvIGZldGNoIGRhdGEiOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmxvYWRFeHBlcmllbmNlcygpOwogIH0KfTs="},{"version":3,"sources":["/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/src/components/survey/UserExperiences.vue"],"names":[],"mappings":";;AAmBI,OAAO,YAAP,MAAyB,oBAAzB;AAEA,eAAe;AACX,EAAA,UAAU,EAAE;AACR,IAAA,YAAY,EAAZ;AADQ,GADD;AAIX,EAAA,IAJW,kBAIJ;AACH,WAAO;AACH,MAAA,OAAO,EAAE,EADN;AAEH,MAAA,SAAS,EAAE,KAFR;AAGH,MAAA,KAAK,EAAE;AAHJ,KAAP;AAKH,GAVU;AAWX,EAAA,OAAO,EAAE;AACL,IAAA,eADK,6BACa;AAAA;;AACd,WAAK,SAAL,GAAiB,IAAjB;AACA,MAAA,KAAK,CAAC,sEAAD,CAAL,CAA8E,IAA9E,CAAmF,UAAC,QAAD,EAAc;AAC7F,YAAI,QAAQ,CAAC,EAAb,EAAiB;AACb,iBAAO,QAAQ,CAAC,IAAT,EAAP;AACJ;AACH,OAJD,EAIG,IAJH,CAIQ,UAAC,IAAD,EAAU;AACd,QAAA,KAAI,CAAC,SAAL,GAAiB,KAAjB;AACA,YAAM,OAAM,GAAI,EAAhB;;AACA,aAAK,IAAM,EAAX,IAAiB,IAAjB,EAAuB;AACnB,UAAA,OAAO,CAAC,IAAR,CAAa;AACT,YAAA,EAAE,EAAE,EADK;AAET,YAAA,IAAI,EAAE,IAAI,CAAC,EAAD,CAAJ,CAAS,IAFN;AAGT,YAAA,MAAM,EAAE,IAAI,CAAC,EAAD,CAAJ,CAAS;AAHR,WAAb;AAKJ;;AACA,QAAA,KAAI,CAAC,OAAL,GAAe,OAAf;AAEH,OAhBD,WAgBS,UAAC,KAAD,EAAW;AAChB,QAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACA,QAAA,KAAI,CAAC,SAAL,GAAiB,KAAjB;AACA,QAAA,KAAI,CAAC,KAAL,GAAa,sBAAb;AACH,OApBD;AAsBJ;AAzBK,GAXE;AAsCX,EAAA,OAtCW,qBAsCD;AACN,SAAK,eAAL;AACJ;AAxCW,CAAf","sourcesContent":["<template>\n    <section>\n        <base-card>\n            <h2>Submitted Experiences</h2>\n            <div>\n                <base-button @click=\"loadExperiences\">Load Submitted Experiences</base-button>\n            </div>\n            <p v-if=\"isLoading\">Loading.................</p>\n            <p v-else-if=\"!isLoading && error\">{{ error }}</p>\n            <p v-else-if=\"!isLoading && (!results || results.length === 0)\">No Stored Experiences Found. Please add some results</p>\n            \n            <ul v-else>\n                <survey-result v-for=\"result in results\" :key=\"result.id\" :name=\"result.name\" :rating=\"result.rating\"></survey-result>\n            </ul>\n        </base-card>\n    </section>\n</template>\n\n<script>\n    import SurveyResult from './SurveyResult.vue';\n\n    export default {\n        components: {\n            SurveyResult,\n        },\n        data() {\n            return {\n                results: [],\n                isLoading: false,\n                error: null,\n            }\n        },\n        methods: {\n            loadExperiences() {\n                this.isLoading = true;\n                fetch('https://vue-http-demo-b7b7d-default-rtdb.firebaseio.com/surveys.json').then((response) => {\n                    if (response.ok) {\n                        return response.json();\n                    }\n                }).then((data) => {\n                    this.isLoading = false;\n                    const results = [];\n                    for (const id in data) {\n                        results.push({\n                            id: id,\n                            name: data[id].name,\n                            rating: data[id].rating\n                        })\n                    }\n                    this.results = results;\n\n                }).catch((error) => {\n                    console.log(error);\n                    this.isLoading = false;\n                    this.error = \"Failed to fetch data\";\n                });\n\n            }\n        },\n        mounted() {\n            this.loadExperiences();\n        }\n    };\n\n</script>\n\n<style scoped>\n    ul {\n        list-style: none;\n        margin: 0;\n        padding: 0;\n    }\n\n</style>\n"],"sourceRoot":""}]}