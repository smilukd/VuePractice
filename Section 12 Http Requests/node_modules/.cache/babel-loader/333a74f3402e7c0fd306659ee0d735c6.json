{"remainingRequest":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/babel-loader/lib/index.js!/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/src/components/survey/UserExperiences.vue?vue&type=template&id=b6174f8e&scoped=true","dependencies":[{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/src/components/survey/UserExperiences.vue","mtime":1607543624827},{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1607095271000},{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/vue-loader-v16/dist/index.js","mtime":1607095271000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCB7IGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIHdpdGhDdHggYXMgX3dpdGhDdHgsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi1iNjE3NGY4ZSIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtYjYxNzRmOGUiKTsKCnZhciBfaG9pc3RlZF8xID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaDIiLCBudWxsLCAiU3VibWl0dGVkIEV4cGVyaWVuY2VzIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiTG9hZCBTdWJtaXR0ZWQgRXhwZXJpZW5jZXMiKTsKCnZhciBfaG9pc3RlZF8zID0gewogIGtleTogMAp9Owp2YXIgX2hvaXN0ZWRfNCA9IHsKICBrZXk6IDEKfTsKdmFyIF9ob2lzdGVkXzUgPSB7CiAga2V5OiAyCn07CnZhciBfaG9pc3RlZF82ID0gewogIGtleTogMwp9OwoKX3BvcFNjb3BlSWQoKTsKCmV4cG9ydCB2YXIgcmVuZGVyID0gLyojX19QVVJFX18qL193aXRoSWQoZnVuY3Rpb24gKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X2Jhc2VfYnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoImJhc2UtYnV0dG9uIik7CgogIHZhciBfY29tcG9uZW50X3N1cnZleV9yZXN1bHQgPSBfcmVzb2x2ZUNvbXBvbmVudCgic3VydmV5LXJlc3VsdCIpOwoKICB2YXIgX2NvbXBvbmVudF9iYXNlX2NhcmQgPSBfcmVzb2x2ZUNvbXBvbmVudCgiYmFzZS1jYXJkIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygic2VjdGlvbiIsIG51bGwsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9iYXNlX2NhcmQsIG51bGwsIHsKICAgICJkZWZhdWx0IjogX3dpdGhJZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbX2hvaXN0ZWRfMSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBudWxsLCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfYmFzZV9idXR0b24sIHsKICAgICAgICBvbkNsaWNrOiAkb3B0aW9ucy5sb2FkRXhwZXJpZW5jZXMKICAgICAgfSwgewogICAgICAgICJkZWZhdWx0IjogX3dpdGhJZChmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXR1cm4gW19ob2lzdGVkXzJdOwogICAgICAgIH0pLAogICAgICAgIF86IDEKICAgICAgICAvKiBTVEFCTEUgKi8KCiAgICAgIH0sIDgKICAgICAgLyogUFJPUFMgKi8KICAgICAgLCBbIm9uQ2xpY2siXSldKSwgJGRhdGEuaXNMb2FkaW5nID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJwIiwgX2hvaXN0ZWRfMywgIkxvYWRpbmcuLi4uLi4uLi4uLi4uLi4uLiIpKSA6ICEkZGF0YS5pc0xvYWRpbmcgJiYgJGRhdGEuZXJyb3IgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soInAiLCBfaG9pc3RlZF80LCBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLmVycm9yKSwgMQogICAgICAvKiBURVhUICovCiAgICAgICkpIDogISRkYXRhLmlzTG9hZGluZyAmJiAoISRkYXRhLnJlc3VsdHMgfHwgJGRhdGEucmVzdWx0cy5sZW5ndGggPT09IDApID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJwIiwgX2hvaXN0ZWRfNSwgIk5vIFN0b3JlZCBFeHBlcmllbmNlcyBGb3VuZC4gUGxlYXNlIGFkZCBzb21lIHJlc3VsdHMiKSkgOiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soInVsIiwgX2hvaXN0ZWRfNiwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCgkZGF0YS5yZXN1bHRzLCBmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfc3VydmV5X3Jlc3VsdCwgewogICAgICAgICAga2V5OiByZXN1bHQuaWQsCiAgICAgICAgICBuYW1lOiByZXN1bHQubmFtZSwKICAgICAgICAgIHJhdGluZzogcmVzdWx0LnJhdGluZwogICAgICAgIH0sIG51bGwsIDgKICAgICAgICAvKiBQUk9QUyAqLwogICAgICAgICwgWyJuYW1lIiwgInJhdGluZyJdKTsKICAgICAgfSksIDEyOAogICAgICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICAgICApKV0pKV07CiAgICB9KSwKICAgIF86IDEKICAgIC8qIFNUQUJMRSAqLwoKICB9KV0pOwp9KTs="},{"version":3,"sources":["/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/src/components/survey/UserExperiences.vue"],"names":[],"mappings":";;;;;;;8BAGY,YAAA,CAA8B,IAA9B,EAA8B,IAA9B,EAAI,uBAAJ,EAAyB,CAAA;AAAA;AAAzB,C;;+CAE0C,4B;;;;;;;;;;;;;;;;;;;;;;;;uBAJlD,YAAA,CAcU,SAdV,EAcU,IAdV,EAcU,CAbN,YAAA,CAYY,oBAZZ,EAYY,IAZZ,EAYY;uBAXR;AAAA,aAA8B,CAA9B,UAA8B,EAC9B,YAAA,CAEM,KAFN,EAEM,IAFN,EAEM,CADF,YAAA,CAA8E,sBAA9E,EAA8E;AAAhE,QAAA,OAAK,EAAE,QAAA,CAAA;AAAyD,OAA9E,EAAoC;2BAAE;AAAA,iBAA0B,C,UAAA,CAA1B;AAAA,S,CAAF;;;;AAAA,OAApC,E;;AAAA,Q,WAAA,CACE,CAFN,CAD8B,EAIrB,KAAA,CAAA,S,kBAAT,YAAA,CAAgD,GAAhD,EAAgD,UAAhD,EAAoB,0BAApB,C,KACe,KAAA,CAAA,S,IAAa,KAAA,CAAA,K,kBAA5B,YAAA,CAAkD,GAAlD,EAAkD,UAAlD,EAAkD,gBAAA,CAAZ,KAAA,CAAA,KAAY,CAAlD,EAA2C;AAAA;AAA3C,O,KACe,KAAA,CAAA,S,KAAS,CAAM,KAAA,CAAA,OAAN,IAAiB,KAAA,CAAA,OAAA,CAAQ,MAAR,KAAc,C,mBAAvD,YAAA,CAAwH,GAAxH,EAAwH,UAAxH,EAAgE,sDAAhE,C,mBAEA,YAAA,CAEK,IAFL,EAEK,UAFL,EAEK,E,kBADD,YAAA,CAAsH,SAAtH,EAAsH,IAAtH,EAAsH,WAAA,CAAtF,KAAA,CAAA,OAAsF,EAA/E,UAAjB,MAAiB,EAAX;6BAA5B,YAAA,CAAsH,wBAAtH,EAAsH;AAA5E,UAAA,GAAG,EAAE,MAAM,CAAC,EAAgE;AAA3D,UAAA,IAAI,EAAE,MAAM,CAAC,IAA8C;AAAvC,UAAA,MAAM,EAAE,MAAM,CAAC;AAAwB,SAAtH,E,IAAA,E;;AAAA,U,kBAAA,C;OAAsH,CAAtH,E;;AAAA,OACC,EAFL,C,CAR8B,CAA9B;AAAA,K,CAWQ;;;;AAAA,GAZZ,CAaM,CAdV,C","sourcesContent":["<template>\n    <section>\n        <base-card>\n            <h2>Submitted Experiences</h2>\n            <div>\n                <base-button @click=\"loadExperiences\">Load Submitted Experiences</base-button>\n            </div>\n            <p v-if=\"isLoading\">Loading.................</p>\n            <p v-else-if=\"!isLoading && error\">{{ error }}</p>\n            <p v-else-if=\"!isLoading && (!results || results.length === 0)\">No Stored Experiences Found. Please add some results</p>\n            \n            <ul v-else>\n                <survey-result v-for=\"result in results\" :key=\"result.id\" :name=\"result.name\" :rating=\"result.rating\"></survey-result>\n            </ul>\n        </base-card>\n    </section>\n</template>\n\n<script>\n    import SurveyResult from './SurveyResult.vue';\n\n    export default {\n        components: {\n            SurveyResult,\n        },\n        data() {\n            return {\n                results: [],\n                isLoading: false,\n                error: null,\n            }\n        },\n        methods: {\n            loadExperiences() {\n                this.isLoading = true;\n                fetch('https://vue-http-demo-b7b7d-default-rtdb.firebaseio.com/surveys.json').then((response) => {\n                    if (response.ok) {\n                        return response.json();\n                    }\n                }).then((data) => {\n                    this.isLoading = false;\n                    const results = [];\n                    for (const id in data) {\n                        results.push({\n                            id: id,\n                            name: data[id].name,\n                            rating: data[id].rating\n                        })\n                    }\n                    this.results = results;\n\n                }).catch((error) => {\n                    console.log(error);\n                    this.isLoading = false;\n                    this.error = \"Failed to fetch data\";\n                });\n\n            }\n        },\n        mounted() {\n            this.loadExperiences();\n        }\n    };\n\n</script>\n\n<style scoped>\n    ul {\n        list-style: none;\n        margin: 0;\n        padding: 0;\n    }\n\n</style>\n"],"sourceRoot":""}]}