{"remainingRequest":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/src/components/survey/UserExperiences.vue?vue&type=template&id=b6174f8e&scoped=true","dependencies":[{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/src/components/survey/UserExperiences.vue","mtime":1607543624827},{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1607095271000},{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/node_modules/vue-loader-v16/dist/index.js","mtime":1607095271000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8c2VjdGlvbj4KICAgICAgICA8YmFzZS1jYXJkPgogICAgICAgICAgICA8aDI+U3VibWl0dGVkIEV4cGVyaWVuY2VzPC9oMj4KICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxiYXNlLWJ1dHRvbiBAY2xpY2s9ImxvYWRFeHBlcmllbmNlcyI+TG9hZCBTdWJtaXR0ZWQgRXhwZXJpZW5jZXM8L2Jhc2UtYnV0dG9uPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPHAgdi1pZj0iaXNMb2FkaW5nIj5Mb2FkaW5nLi4uLi4uLi4uLi4uLi4uLi48L3A+CiAgICAgICAgICAgIDxwIHYtZWxzZS1pZj0iIWlzTG9hZGluZyAmJiBlcnJvciI+e3sgZXJyb3IgfX08L3A+CiAgICAgICAgICAgIDxwIHYtZWxzZS1pZj0iIWlzTG9hZGluZyAmJiAoIXJlc3VsdHMgfHwgcmVzdWx0cy5sZW5ndGggPT09IDApIj5ObyBTdG9yZWQgRXhwZXJpZW5jZXMgRm91bmQuIFBsZWFzZSBhZGQgc29tZSByZXN1bHRzPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPHVsIHYtZWxzZT4KICAgICAgICAgICAgICAgIDxzdXJ2ZXktcmVzdWx0IHYtZm9yPSJyZXN1bHQgaW4gcmVzdWx0cyIgOmtleT0icmVzdWx0LmlkIiA6bmFtZT0icmVzdWx0Lm5hbWUiIDpyYXRpbmc9InJlc3VsdC5yYXRpbmciPjwvc3VydmV5LXJlc3VsdD4KICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Jhc2UtY2FyZD4KICAgIDwvc2VjdGlvbj4K"},{"version":3,"sources":["/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/src/components/survey/UserExperiences.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC,CAAC;gBACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjF,CAAC,CAAC,CAAC,CAAC,CAAC;YACL,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACjD,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEvH,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gzH,CAAC,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/luke.smith/Total Expert/Working HTML files/VUE/Section 12 Http Requests/src/components/survey/UserExperiences.vue","sourceRoot":"","sourcesContent":["<template>\n    <section>\n        <base-card>\n            <h2>Submitted Experiences</h2>\n            <div>\n                <base-button @click=\"loadExperiences\">Load Submitted Experiences</base-button>\n            </div>\n            <p v-if=\"isLoading\">Loading.................</p>\n            <p v-else-if=\"!isLoading && error\">{{ error }}</p>\n            <p v-else-if=\"!isLoading && (!results || results.length === 0)\">No Stored Experiences Found. Please add some results</p>\n            \n            <ul v-else>\n                <survey-result v-for=\"result in results\" :key=\"result.id\" :name=\"result.name\" :rating=\"result.rating\"></survey-result>\n            </ul>\n        </base-card>\n    </section>\n</template>\n\n<script>\n    import SurveyResult from './SurveyResult.vue';\n\n    export default {\n        components: {\n            SurveyResult,\n        },\n        data() {\n            return {\n                results: [],\n                isLoading: false,\n                error: null,\n            }\n        },\n        methods: {\n            loadExperiences() {\n                this.isLoading = true;\n                fetch('https://vue-http-demo-b7b7d-default-rtdb.firebaseio.com/surveys.json').then((response) => {\n                    if (response.ok) {\n                        return response.json();\n                    }\n                }).then((data) => {\n                    this.isLoading = false;\n                    const results = [];\n                    for (const id in data) {\n                        results.push({\n                            id: id,\n                            name: data[id].name,\n                            rating: data[id].rating\n                        })\n                    }\n                    this.results = results;\n\n                }).catch((error) => {\n                    console.log(error);\n                    this.isLoading = false;\n                    this.error = \"Failed to fetch data\";\n                });\n\n            }\n        },\n        mounted() {\n            this.loadExperiences();\n        }\n    };\n\n</script>\n\n<style scoped>\n    ul {\n        list-style: none;\n        margin: 0;\n        padding: 0;\n    }\n\n</style>\n"]}]}